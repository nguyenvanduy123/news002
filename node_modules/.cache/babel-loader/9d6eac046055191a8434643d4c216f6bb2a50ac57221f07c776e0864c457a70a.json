{"ast":null,"code":"import ApiConstants from 'adapter/ApiConstants';\nimport ApiOperation from 'adapter/ApiOperation';\nconst AppFactory = {\n  fetchSample: async data => {\n    //    let disti = data.payload.data\n\n    let datadisstrict = ApiOperation.request({\n      url: ApiConstants.distrist,\n      method: 'GET',\n      district: data\n    });\n    console.log(datadisstrict.Promise(() => {}));\n    return;\n  },\n  fetchgetdataID: data => {\n    console.log(data.payload.distr.district);\n    var iddistricit = [];\n    if (data.payload.distr.search) {\n      iddistricit = data.payload.distr.district.filter((item, indexl) => {\n        let searchdistri = data.payload.distr.search != \"\" ? item.name.toLowerCase().includes(data.payload.distr.search.toLowerCase().trim()) : true;\n        return searchdistri;\n      });\n    } else {\n      iddistricit = data.payload.distr.district.filter((item, indexl) => {\n        return parseInt(item.province_id) == parseInt(data.payload.distr.idpro);\n      });\n    }\n    return {\n      districtID: iddistricit\n    };\n  }\n};\nexport default AppFactory;","map":{"version":3,"names":["ApiConstants","ApiOperation","AppFactory","fetchSample","data","datadisstrict","request","url","distrist","method","district","console","log","Promise","fetchgetdataID","payload","distr","iddistricit","search","filter","item","indexl","searchdistri","name","toLowerCase","includes","trim","parseInt","province_id","idpro","districtID"],"sources":["/Users/user/Documents/DUY IT/S0002/news002/news002/src/redux/district/factory.js"],"sourcesContent":["import ApiConstants from 'adapter/ApiConstants';\r\nimport ApiOperation from 'adapter/ApiOperation';\r\n\r\nconst AppFactory = {\r\n    fetchSample: async (data) => {\r\n\r\n\r\n        //    let disti = data.payload.data\r\n\r\n       let datadisstrict = ApiOperation.request({\r\n            url: ApiConstants.distrist,\r\n            method: 'GET',\r\n           district: data \r\n\r\n        });\r\n        console.log(datadisstrict.Promise(()=>{}));\r\n        return\r\n        \r\n\r\n    },\r\n    fetchgetdataID: (data) => {\r\n    console.log(data.payload.distr.district);\r\n        var iddistricit = []\r\n        if (data.payload.distr.search) {\r\n            iddistricit = data.payload.distr.district.filter((item, indexl) => {\r\n               let searchdistri = data.payload.distr.search!=\"\"?item.name.toLowerCase().includes(data.payload.distr.search.toLowerCase().trim()):true\r\n                    return searchdistri\r\n            })\r\n        }else{\r\n            iddistricit = data.payload.distr.district.filter((item, indexl) => {\r\n            return parseInt(item.province_id) == parseInt(data.payload.distr.idpro);\r\n        })\r\n        }\r\n         \r\n        \r\n\r\n        return {\r\n            districtID: iddistricit\r\n        };\r\n\r\n    },\r\n}\r\n\r\nexport default AppFactory"],"mappings":"AAAA,OAAOA,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,YAAY,MAAM,sBAAsB;AAE/C,MAAMC,UAAU,GAAG;EACfC,WAAW,EAAE,MAAOC,IAAI,IAAK;IAGzB;;IAED,IAAIC,aAAa,GAAGJ,YAAY,CAACK,OAAO,CAAC;MACpCC,GAAG,EAAEP,YAAY,CAACQ,QAAQ;MAC1BC,MAAM,EAAE,KAAK;MACdC,QAAQ,EAAEN;IAEb,CAAC,CAAC;IACFO,OAAO,CAACC,GAAG,CAACP,aAAa,CAACQ,OAAO,CAAC,MAAI,CAAC,CAAC,CAAC,CAAC;IAC1C;EAGJ,CAAC;EACDC,cAAc,EAAGV,IAAI,IAAK;IAC1BO,OAAO,CAACC,GAAG,CAACR,IAAI,CAACW,OAAO,CAACC,KAAK,CAACN,QAAQ,CAAC;IACpC,IAAIO,WAAW,GAAG,EAAE;IACpB,IAAIb,IAAI,CAACW,OAAO,CAACC,KAAK,CAACE,MAAM,EAAE;MAC3BD,WAAW,GAAGb,IAAI,CAACW,OAAO,CAACC,KAAK,CAACN,QAAQ,CAACS,MAAM,CAAC,CAACC,IAAI,EAAEC,MAAM,KAAK;QAChE,IAAIC,YAAY,GAAGlB,IAAI,CAACW,OAAO,CAACC,KAAK,CAACE,MAAM,IAAE,EAAE,GAACE,IAAI,CAACG,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACrB,IAAI,CAACW,OAAO,CAACC,KAAK,CAACE,MAAM,CAACM,WAAW,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC,CAAC,GAAC,IAAI;QACjI,OAAOJ,YAAY;MAC3B,CAAC,CAAC;IACN,CAAC,MAAI;MACDL,WAAW,GAAGb,IAAI,CAACW,OAAO,CAACC,KAAK,CAACN,QAAQ,CAACS,MAAM,CAAC,CAACC,IAAI,EAAEC,MAAM,KAAK;QACnE,OAAOM,QAAQ,CAACP,IAAI,CAACQ,WAAW,CAAC,IAAID,QAAQ,CAACvB,IAAI,CAACW,OAAO,CAACC,KAAK,CAACa,KAAK,CAAC;MAC3E,CAAC,CAAC;IACF;IAIA,OAAO;MACHC,UAAU,EAAEb;IAChB,CAAC;EAEL;AACJ,CAAC;AAED,eAAef,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}