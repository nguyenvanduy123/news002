{"ast":null,"code":"import axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { setupInterceptersTo } from './AxiosConfig';\nconst BASE_URL = process.env.REACT_APP_API_URL;\nconst api = setupInterceptersTo(axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n    'x-apikey': process.env.REACT_APP_API_KEY,\n    'x-requestid': uuidv4()\n  }\n}));\nexport const fetchAll = (path, params) => {\n  return api.get(`${BASE_URL}/${path}`, {\n    params\n  }).then(resp => resp.data).catch(error => console.log(error));\n};\nexport const fetchSingle = (path, id) => {\n  return api.get(`${BASE_URL}/${path}/${id}`).then(resp => resp.data).catch(error => {\n    console.log(error);\n    throw error;\n  });\n};\nexport const post = (path, model) => {\n  return api.post(`${BASE_URL}/${path}`, model).then(resp => resp.data).catch(error => {\n    console.log(error);\n    throw error;\n  });\n};\nexport const patch = (path, model) => {\n  return api.patch(`${BASE_URL}/${path}`, model).then(resp => resp.data).catch(error => {\n    console.log(error);\n    throw error;\n  });\n};\nexport const remove = (path, id) => {\n  return api.delete(`${BASE_URL}/${path}/${id}`).then(resp => resp.data).catch(error => {\n    console.log(error);\n    throw error;\n  });\n};\nexport const request = _ref => {\n  let {\n    url = '',\n    method = 'GET',\n    data = {},\n    params = {},\n    responseType = \"json\"\n  } = _ref;\n  return api.request({\n    url: url,\n    method: method,\n    data: data,\n    params: params,\n    responseType: responseType\n  }).then(resp => {\n    // console.log(\"resp.data\",resp.data)\n    return resp.data;\n  }).catch(error => {\n    console.log(error);\n    throw error;\n  });\n};\nexport const fetchsearch = _ref2 => {\n  let {\n    path,\n    params\n  } = _ref2;\n  return api.get(`${patch}`, params).then(resp => resp.data).catch(error => console.log(error));\n};","map":{"version":3,"names":["axios","v4","uuidv4","setupInterceptersTo","BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","REACT_APP_API_KEY","fetchAll","path","params","get","then","resp","data","catch","error","console","log","fetchSingle","id","post","model","patch","remove","delete","request","_ref","url","method","responseType","fetchsearch","_ref2"],"sources":["/Users/user/Documents/DUY IT/S0002/news002/news002/src/adapter/ApiProvider.js"],"sourcesContent":["import axios from 'axios'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { setupInterceptersTo } from './AxiosConfig'\r\n\r\nconst BASE_URL = process.env.REACT_APP_API_URL\r\n\r\nconst api = setupInterceptersTo(\r\n    axios.create({\r\n        baseURL: BASE_URL,\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'x-apikey': process.env.REACT_APP_API_KEY,\r\n            'x-requestid': uuidv4(),\r\n            \r\n        },\r\n    }),\r\n)\r\n\r\n\r\nexport const fetchAll = (path, params) =>\r\n{\r\n   \r\n    return api\r\n        .get(`${BASE_URL}/${path}`, {params})\r\n        .then((resp) => resp.data)\r\n        .catch((error) => console.log(error))\r\n}\r\n\r\nexport const fetchSingle = (path, id) =>\r\n{\r\n    return api\r\n        .get(`${BASE_URL}/${path}/${id}`)\r\n        .then((resp) => resp.data)\r\n        .catch((error) => { console.log(error); throw error })\r\n}\r\n\r\nexport const post = (path, model) =>\r\n{\r\n    return api\r\n        .post(`${BASE_URL}/${path}`, model)\r\n        .then((resp) => resp.data)\r\n        .catch((error) => { console.log(error); throw error })\r\n}\r\n\r\nexport const patch = (path, model) =>\r\n{\r\n    return api\r\n        .patch(`${BASE_URL}/${path}`, model)\r\n        .then((resp) => resp.data)\r\n        .catch((error) => { console.log(error); throw error })\r\n}\r\n\r\nexport const remove = (path, id) =>\r\n{\r\n    return api\r\n        .delete(`${BASE_URL}/${path}/${id}`)\r\n        .then((resp) => resp.data)\r\n        .catch((error) => { console.log(error); throw error })\r\n}\r\nexport const request = ({ url = '', method = 'GET', data = {}, params = {}, responseType = \"json\" }) =>\r\n{\r\n    return api\r\n        .request({\r\n            url: url,\r\n            method: method,\r\n            data: data,\r\n            params: params,\r\n            responseType: responseType\r\n        })\r\n        .then((resp) =>\r\n        {\r\n            // console.log(\"resp.data\",resp.data)\r\n            return resp.data\r\n        })\r\n        .catch((error) => { console.log(error); throw error })\r\n}\r\nexport const fetchsearch =({path,params})=>\r\n{\r\n    \r\n        return api \r\n        .get(`${patch}`,params)\r\n        .then((resp) => resp.data)\r\n        .catch((error) => console.log(error))\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}